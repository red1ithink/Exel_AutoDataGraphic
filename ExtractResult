Sub ExtractChartData_Robust()

    '--- 1. 설정: 시트 이름을 정확하게 입력하세요 ---
    Dim chartsSheetName As String
    chartsSheetName = "##" ' ◀ 그래프들이 있는 시트 이름
    
    Dim resultsSheetName As String
    resultsSheetName = "Results" ' ◀ 추출 결과를 저장할 시트 이름
    '-------------------------------------------------
    
    
    '--- 변수 선언 ---
    Dim wsCharts As Worksheet, wsResults As Worksheet
    Dim chrtObj As ChartObject
    Dim outputRow As Long
    
    '--- 시트 확인 및 설정 ---
    On Error Resume Next
    Set wsCharts = ThisWorkbook.Sheets(chartsSheetName)
    If wsCharts Is Nothing Then
        MsgBox "'" & chartsSheetName & "' 시트를 찾을 수 없습니다.", vbCritical
        Exit Sub
    End If
    
    Set wsResults = ThisWorkbook.Sheets(resultsSheetName)
    If wsResults Is Nothing Then
        Set wsResults = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        wsResults.Name = resultsSheetName
    End If
    On Error GoTo 0
    
    
    '--- 결과 시트 초기화 및 헤더 작성 ---
    wsResults.Cells.Clear
    With wsResults.Range("A1:G1") ' G열 추가
        .Value = Array("그래프 제목", "X축 제목", "Y축 제목", "회귀선 공식", "R² 값", "R 값", "원본 시트")
        .Font.Bold = True
    End With
    outputRow = 2

    Application.ScreenUpdating = False
    
    '--- 2. 메인 작업: 모든 그래프 순회 ---
    If wsCharts.ChartObjects.Count = 0 Then
        MsgBox "'" & chartsSheetName & "' 시트에 그래프가 없습니다.", vbInformation
        Exit Sub
    End If

    For Each chrtObj In wsCharts.ChartObjects
        With chrtObj.Chart
            '--- 정보 초기화 ---
            Dim chartTitle As String, xAxisTitle As String, yAxisTitle As String
            Dim equation As String, rSquaredValue As Double, rValue As Double
            
            '--- 정보 추출 ---
            If .HasTitle Then chartTitle = .chartTitle.Text ' 대소문자 수정
            If .Axes(xlCategory, xlPrimary).HasTitle Then xAxisTitle = .Axes(xlCategory, xlPrimary).AxisTitle.Text
            If .Axes(xlValue, xlPrimary).HasTitle Then yAxisTitle = .Axes(xlValue, xlPrimary).AxisTitle.Text
            
            ' ? 안정성을 높인 추세선 정보 추출 로직
            If .SeriesCollection.Count > 0 And .SeriesCollection(1).Trendlines.Count > 0 Then
                Dim TLine As Trendline
                Set TLine = .SeriesCollection(1).Trendlines(1)
                
                ' 원래 레이블 표시 상태를 기억해둠
                Dim originalStateEq As Boolean, originalStateR2 As Boolean
                originalStateEq = TLine.DisplayEquation
                originalStateR2 = TLine.DisplayRSquared
                
                ' 정보 추출을 위해 레이블을 잠시 강제로 켬
                TLine.DisplayEquation = True
                TLine.DisplayRSquared = True
                
                Dim trendLabelText As String
                trendLabelText = TLine.DataLabel.Text
                
                ' 추출 후, 원래 상태로 되돌림 (그래프 모양 유지)
                TLine.DisplayEquation = originalStateEq
                TLine.DisplayRSquared = originalStateR2
                
                ' ? 줄바꿈과 상관없이 R²을 기준으로 값을 분리
                Dim rSquaredPos As Long
                rSquaredPos = InStr(1, trendLabelText, "R²")
                
                If rSquaredPos > 0 Then
                    equation = Trim(Left(trendLabelText, rSquaredPos - 1))
                    Dim rSquaredString As String
                    rSquaredString = Trim(Mid(trendLabelText, rSquaredPos))
                    rSquaredValue = Val(Trim(Split(rSquaredString, "=")(1)))
                    
                    If rSquaredValue >= 0 Then
                        rValue = Sqr(rSquaredValue)
                    Else
                        rValue = 0
                    End If
                Else
                    equation = trendLabelText
                End If
                
                equation = Replace(equation, Chr(11), "")
            End If
            
            '--- 3. 결과 시트에 값 작성 ---
            wsResults.Cells(outputRow, 1).Value = chartTitle
            wsResults.Cells(outputRow, 2).Value = xAxisTitle
            wsResults.Cells(outputRow, 3).Value = yAxisTitle
            wsResults.Cells(outputRow, 4).Value = equation
            wsResults.Cells(outputRow, 5).Value = rSquaredValue
            wsResults.Cells(outputRow, 6).Value = rValue
            wsResults.Cells(outputRow, 7).Value = chartsSheetName ' 원본 시트 이름 기록
            
            outputRow = outputRow + 1
        End With
    Next chrtObj
    
    Application.ScreenUpdating = True
    wsResults.Columns("A:G").AutoFit
    MsgBox "총 " & wsCharts.ChartObjects.Count & "개 그래프의 정보 추출이 완료되었습니다.", vbInformation, "완료"

End Sub
